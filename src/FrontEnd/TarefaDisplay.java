/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEnd;

import BackEnd.Projeto;
import BackEnd.Sistema;
import java.awt.Color;
import BackEnd.Tarefa;
import javax.swing.JOptionPane;

/**
 * @author Flávio Santos(a89960)
 * @author João Silva(a89956)
 * @author Pedro Magalhães(a89169)
 */
public class TarefaDisplay extends javax.swing.JPanel {

    /**
     * Creates new form ProjetoDisplay
     */
    private Sistema sistema;
    private Projeto projeto;
    private Tarefa tarefa;

    public TarefaDisplay(Sistema sistema, Projeto projeto, Tarefa tarefa) {
        this.sistema = sistema;
        this.projeto = projeto;
        this.tarefa = tarefa;
        initComponents();
        setValues();//Carrega os valores da tarefa
        if (this.sistema.getCurrentUser() != tarefa.getAssociatedUserTarefa() && this.sistema.getCurrentUser() != tarefa.getOwnerTarefa()) {//Se utilizador não for owner do tarefa ou o associado da tarefa, a checkbox de concluír a tarefa irá ser não visível
            ConcluírCheckBox1.setEnabled(false);
        }
    }

    public void setValues() {
        títuloLabel.setText("Título : " + tarefa.getTítuloTarefa());//título da tarefa
        ProjetoLabel.setText("Projeto : " + projeto.getTítuloProjeto());//título do projeto
        ownerLabel.setText("Owner Tarefa : " + tarefa.getOwnerTarefa().getNomeUser() + " ( " + tarefa.getOwnerTarefa().getUsernameUser() + " )");//owner da tarefa
        prioridadeLabel.setText("Prioridade : " + tarefa.getPrioridadeTarefa());//prioridade da tarefa
        if (tarefa.isConcluídaTarefa()) {//se a tarefa estiver concluída, checkbox irá estar selecionada
            tempoRestanteValue.setText("Data Conclusão: " + tarefa.getDataConclusãoTarefa().toLocalDate().toString() + " " + tarefa.getDataConclusãoTarefa().getHour() + " : " + tarefa.getDataConclusãoTarefa().getMinute());
            if (tarefa.getDataConclusãoTarefa().isAfter(tarefa.getDataLimiteTarefa())) {
                tempoRestanteValue.setForeground(Color.red);
            } else {
                tempoRestanteValue.setForeground(new Color(34, 139, 34));
            }
            ConcluírCheckBox1.setSelected(true);
        } else {//se não não estará selecionada
            ConcluírCheckBox1.setSelected(false);
            if (!tarefa.isAtrasada()) {//se não estiver atrasada cor verde
                tempoRestanteValue.setForeground(new Color(34, 139, 34));
                tempoRestanteValue.setText(tarefa.getTempoStringTarefa());
            } else {//Se estiver atrasada, cor vermelha
                tempoRestanteValue.setForeground(Color.red);
                tempoRestanteValue.setText(tarefa.getTempoStringTarefa());
            }
        }

        listaTarefasLabel.setText("Lista : " + projeto.getListaTarefasTarefaProjeto(tarefa));//título da tarefa
        associadoLabel.setText("Associado : " + tarefa.getAssociatedUserTarefa().getNomeUser() + " ( " + tarefa.getAssociatedUserTarefa().getUsernameUser() + " )");//user associado à tarefa
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        títuloLabel = new javax.swing.JLabel();
        associadoLabel = new javax.swing.JLabel();
        tempoRestanteValue = new javax.swing.JLabel();
        prioridadeLabel = new javax.swing.JLabel();
        ProjetoLabel = new javax.swing.JLabel();
        ownerLabel = new javax.swing.JLabel();
        ConcluírCheckBox1 = new javax.swing.JCheckBox();
        listaTarefasLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setForeground(new java.awt.Color(60, 63, 65));
        setToolTipText("");
        setMaximumSize(new java.awt.Dimension(625, 130));
        setMinimumSize(new java.awt.Dimension(615, 130));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(625, 130));

        títuloLabel.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        títuloLabel.setForeground(new java.awt.Color(60, 63, 65));
        títuloLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                títuloLabelMouseClicked(evt);
            }
        });

        associadoLabel.setForeground(new java.awt.Color(60, 63, 65));
        associadoLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        associadoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                associadoLabelMouseClicked(evt);
            }
        });

        tempoRestanteValue.setForeground(new java.awt.Color(60, 63, 65));
        tempoRestanteValue.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        prioridadeLabel.setForeground(new java.awt.Color(60, 63, 65));

        ProjetoLabel.setForeground(new java.awt.Color(60, 63, 65));
        ProjetoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProjetoLabelMouseClicked(evt);
            }
        });

        ownerLabel.setForeground(new java.awt.Color(60, 63, 65));
        ownerLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        ownerLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ownerLabelMouseClicked(evt);
            }
        });

        ConcluírCheckBox1.setText("Concluída");
        ConcluírCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConcluírCheckBox1ActionPerformed(evt);
            }
        });

        listaTarefasLabel.setForeground(new java.awt.Color(60, 63, 65));
        listaTarefasLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaTarefasLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(títuloLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProjetoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(listaTarefasLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(prioridadeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(associadoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ownerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tempoRestanteValue, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ConcluírCheckBox1))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(títuloLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ownerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(associadoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProjetoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(listaTarefasLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tempoRestanteValue, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prioridadeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConcluírCheckBox1))
                .addGap(0, 8, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void títuloLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_títuloLabelMouseClicked
        new TarefaFrontEnd(sistema, tarefa).setVisible(true);//nova janela da tarefa
    }//GEN-LAST:event_títuloLabelMouseClicked

    private void ProjetoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProjetoLabelMouseClicked
        new ProjetoFrontEnd(sistema, projeto).setVisible(true);//nova janelo do projeto
    }//GEN-LAST:event_ProjetoLabelMouseClicked

    private void ownerLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ownerLabelMouseClicked
        new Perfil(sistema, tarefa.getOwnerTarefa()).setVisible(true);//nova janela do perfil do owner da tarefa
    }//GEN-LAST:event_ownerLabelMouseClicked

    private void associadoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_associadoLabelMouseClicked
        new Perfil(sistema, tarefa.getAssociatedUserTarefa()).setVisible(true);//nova janela do perfil do associado à tarefa
    }//GEN-LAST:event_associadoLabelMouseClicked

    private void ConcluírCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConcluírCheckBox1ActionPerformed
        if (ConcluírCheckBox1.isSelected()) {//Se selecionar concluír a tarefa
            int confirmaçãoInt = JOptionPane.showConfirmDialog(this, "Tem a certeza que pretende concluír a tarefa " + tarefa.getTítuloTarefa() + " ?", "Confirmação", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);//mensagem de confirmação
            if (confirmaçãoInt == 0) {//se SIM
                tarefa.terminarTarefa();//termina a tarefa
                sistema.setSaved(false);//não gravado
                sistema.getDashboardWindow().refreshUI();//atualia as janelas
            } else {
                ConcluírCheckBox1.setSelected(false);
            }
        } else {//Se selecionar continuar a tarefa
            int confirmaçãoInt = JOptionPane.showConfirmDialog(this, "Tem a certeza que pretende continuar a tarefa " + tarefa.getTítuloTarefa() + " ?", "Confirmação", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);//mensagem de confirmação
            if (confirmaçãoInt == 0) {//se SIM
                tarefa.recomeçarTarefa();//continua a tarefa
                sistema.setSaved(false);//não gravado
                sistema.getDashboardWindow().refreshUI();//atualiza as janelas
            }
        }
    }//GEN-LAST:event_ConcluírCheckBox1ActionPerformed

    private void listaTarefasLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaTarefasLabelMouseClicked
        new ListaTarefasFrontEnd(sistema, projeto, projeto.getListaTarefasTarefaProjeto(tarefa)).setVisible(true);//nova janela da lista de tarefas
    }//GEN-LAST:event_listaTarefasLabelMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ConcluírCheckBox1;
    private javax.swing.JLabel ProjetoLabel;
    private javax.swing.JLabel associadoLabel;
    private javax.swing.JLabel listaTarefasLabel;
    private javax.swing.JLabel ownerLabel;
    private javax.swing.JLabel prioridadeLabel;
    private javax.swing.JLabel tempoRestanteValue;
    private javax.swing.JLabel títuloLabel;
    // End of variables declaration//GEN-END:variables
}
